# Autogenerated with SMOP 
from smop.core import *
# Stereonet.m

    
@function
def Stereonet(trdv=None,plgv=None,intrad=None,sttype=None,*args,**kwargs):
    varargin = Stereonet.varargin
    nargin = Stereonet.nargin

    #Stereonet plots an equal angle or equal area stereonet of unit radius
#in any view direction
    
    #   USE: Stereonet(trdv,plgv,intrad,stttype)
    
    #   trdv = trend of view direction
#   plgv = plunge of view direction
#   intrad = interval in radians between great or small circles 
#   sttype = An integer indicating the type of stereonet. 0 for equal angle,
#            and 1 for equal area
    
    #   NOTE: All angles should be entered in radians
    
    #   Example: To plot an equal area stereonet at 10 deg intervals in a
#   default view direction type:
    
    #   Stereonet(0,90*pi/180,10*pi/180,1);
    
    #   To plot the same stereonet but with a view direction of say: 235/42,
#   type:
    
    #   Stereonet(235*pi/180,42*pi/180,10*pi/180,1);
    
    #   Stereonet uses functions Pole, GeogrToView, SmallCircle and GreatCircle
    
    #MATLAB script written by Nestor Cardozo for the book Structural 
#Geology Algorithms by Allmendinger, Cardozo, & Fisher, 2011. If you use
#this script, please cite this as "Cardozo in Allmendinger et al. (2011)"
    
    # Some constants
    east=pi / 2.0
# Stereonet.m:32
    west=dot(3.0,east)
# Stereonet.m:33
    # Plot stereonet reference circle
    r=1.0
# Stereonet.m:36
    
    TH=dot((arange(0,360,1)),pi) / 180
# Stereonet.m:37
    
    X,Y=pol2cart(TH,r,nargout=2)
# Stereonet.m:38
    
    plot(X,Y,'k')
    
    axis(cat(- 1,1,- 1,1))
    
    axis('equal')
    axis('off')
    
    hold('on')
    
    # Number of small circles
    nCircles=pi / (dot(intrad,2.0))
# Stereonet.m:45
    # Small circles
# Start at the North
    trd=0.0
# Stereonet.m:49
    plg=0.0
# Stereonet.m:50
    # If view direction is not the default (trd=0,plg=90), transform line to
# view direction
    if trdv != 0.0 or plgv != east:
        trd,plg=GeogrToView(trd,plg,trdv,plgv,nargout=2)
# Stereonet.m:54
    
    # Plot small circles
    for i in arange(1,nCircles).reshape(-1):
        coneAngle=dot(i,intrad)
# Stereonet.m:58
        path1,path2,np1,np2=SmallCircle(trd,plg,coneAngle,sttype,nargout=4)
# Stereonet.m:59
        plot(path1[1:np1,1],path1[1:np1,2],'b')
        if np2 > 0:
            plot(path2[1:np2,1],path2[1:np2,2],'b')
    
    # Great circles
    for i in arange(0,dot(nCircles,2)).reshape(-1):
        #Western half
        if i <= nCircles:
            # Pole of great circle
            trd=copy(west)
# Stereonet.m:71
            plg=dot(i,intrad)
# Stereonet.m:72
        else:
            # Pole of great circle
            trd=copy(east)
# Stereonet.m:76
            plg=dot((i - nCircles),intrad)
# Stereonet.m:77
        # If pole is vertical, shift it a little bit
        if plg == east:
            plg=dot(plg,0.9999)
# Stereonet.m:81
        # If view direction is not the default (trd=0,plg=90), transform line to
    # view direction
        if trdv != 0.0 or plgv != east:
            trd,plg=GeogrToView(trd,plg,trdv,plgv,nargout=2)
# Stereonet.m:86
        # Compute plane from pole
        strike,dip=Pole(trd,plg,0,nargout=2)
# Stereonet.m:89
        path=GreatCircle(strike,dip,sttype)
# Stereonet.m:91
        plot(path[:,1],path[:,2],'b')
    
    hold('off')
    
    return
    
if __name__ == '__main__':
    pass
    