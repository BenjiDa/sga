# Autogenerated with SMOP 
from smop.core import *
# VelTrishear.m

    
@function
def VelTrishear(xx=None,yy=None,sinc=None,m=None,c=None,*args,**kwargs):
    varargin = VelTrishear.varargin
    nargin = VelTrishear.nargin

    #VelTrishear: Symmetric, linear in vx trishear velocity field 
#Equation 6 of Zehnder and Allmendinger 2000
    
    #MATLAB script written by Nestor Cardozo for the book Structural 
#Geology Algorithms by Allmendinger, Cardozo, & Fisher, 2011. If you use
#this script, please cite this as "Cardozo in Allmendinger et al. (2011)"
    
    #If behind the fault tip
    if xx < 0.0:
        #If hanging wall
        if yy >= 0.0:
            vx=copy(sinc)
# VelTrishear.m:13
            vy=0.0
# VelTrishear.m:14
        else:
            if yy < 0.0:
                vx=0.0
# VelTrishear.m:17
                vy=0.0
# VelTrishear.m:18
        #If ahead the fault tip
    else:
        if xx >= 0.0:
            #If hanging wall
            if yy >= dot(xx,m):
                vx=copy(sinc)
# VelTrishear.m:24
                vy=0.0
# VelTrishear.m:25
            else:
                if yy <= dot(- xx,m):
                    vx=0.0
# VelTrishear.m:28
                    vy=0.0
# VelTrishear.m:29
                else:
                    #Some variables to speed up the computation
                    a=1 + c
# VelTrishear.m:33
                    b=1 / c
# VelTrishear.m:33
                    d=a / c
# VelTrishear.m:33
                    ayy=abs(yy)
# VelTrishear.m:33
                    syy=yy / ayy
# VelTrishear.m:33
                    vx=dot((sinc / 2.0),(dot(syy,realpow(ayy / (dot(xx,m)),b)) + 1))
# VelTrishear.m:35
                    vy=dot(dot((sinc / 2.0),(m / a)),(realpow(ayy / (dot(xx,m)),d) - 1))
# VelTrishear.m:37
    
    return vx,vy
    
if __name__ == '__main__':
    pass
    