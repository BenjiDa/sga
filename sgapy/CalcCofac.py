# Autogenerated with SMOP 
from smop.core import *
# CalcCofac.m

    
@function
def CalcCofac(a=None,*args,**kwargs):
    varargin = CalcCofac.varargin
    nargin = CalcCofac.nargin

    #CalcCofac calculates all of the cofactor elements for a 3 x 3 matrix
    
    #   USE: cofac = CalcCofac(a)
    
    #   a is the matrix and cofac are the cofactor elements
    
    #MATLAB script written by Nestor Cardozo for the book Structural 
#Geology Algorithms by Allmendinger, Cardozo, & Fisher, 2011. If you use
#this script, please cite this as "Cardozo in Allmendinger et al. (2011)"
    
    #Number of rows and columns in a
    n=size(a,1)
# CalcCofac.m:13
    m=size(a,2)
# CalcCofac.m:14
    #If matrix is 3 x 3
    if n == 3 and m == 3:
        #Initialize cofactor
        cofac=zeros(3,3)
# CalcCofac.m:19
        cofac[1,1]=dot(a[2,2],a[3,3]) - dot(a[2,3],a[3,2])
# CalcCofac.m:21
        cofac[1,2]=- (dot(a[2,1],a[3,3]) - dot(a[2,3],a[3,1]))
# CalcCofac.m:22
        cofac[1,3]=dot(a[2,1],a[3,2]) - dot(a[2,2],a[3,1])
# CalcCofac.m:23
        cofac[2,1]=- (dot(a[1,2],a[3,3]) - dot(a[1,3],a[3,2]))
# CalcCofac.m:25
        cofac[2,2]=dot(a[1,1],a[3,3]) - dot(a[1,3],a[3,1])
# CalcCofac.m:26
        cofac[2,3]=- (dot(a[1,1],a[3,2]) - dot(a[1,2],a[3,1]))
# CalcCofac.m:27
        cofac[3,1]=dot(a[1,2],a[2,3]) - dot(a[1,3],a[2,2])
# CalcCofac.m:29
        cofac[3,2]=- (dot(a[1,1],a[2,3]) - dot(a[1,3],a[2,1]))
# CalcCofac.m:30
        cofac[3,3]=dot(a[1,1],a[2,2]) - dot(a[1,2],a[2,1])
# CalcCofac.m:31
    else:
        error('Matrix is not 3 x 3')
    
    return cofac
    
if __name__ == '__main__':
    pass
    