# Autogenerated with SMOP 
from smop.core import *
# GreatCircle.m


def greatcircle(strike,dip,sttype,*args,**kwargs):
    

    #greatcircle computes the great circle path of a plane in an equal angle or equal area stereonet of unit radius
    
    #   USE: path = GreatCircle(strike,dip,sttype)
    
    #   strike = strike of plane
    #   dip = dip of plane
    #   sttype = type of stereonet. 0 for equal angle and 1 for equal area
    #   path = vector with x and y coordinates of points in great circle path
    
    #   NOTE: strike and dip should be entered in radians.
    
    #   GreatCircle uses functions StCoordLine, Pole and Rotate
    
    #MATLAB script written by Nestor Cardozo for the book Structural 
    #Geology Algorithms by Allmendinger, Cardozo, & Fisher, 2011. If you use
    #this script, please cite this as "Cardozo in Allmendinger et al. (2011)"

    # converted to python by bmelosh 2/13/23
    

    #Compute the pole to the plane. This will be the axis of rotation to make
    #the great circle
    trda,plga=Pole(strike,dip,1,nargout=2)

    # GreatCircle.m:22
    #Now pick a line at the intersection of the great circle with the primitive
    #of the stereonet
    trd=copy(strike)
    # GreatCircle.m:26
    plg=0.0
    # GreatCircle.m:27
    #To make the great circle, rotate the line 180 degrees in increments
    #of 1 degree
    rot=dot((arange(0,180,1)),pi) / 180
    # GreatCircle.m:31
    path=zeros(size(rot,2),2)
    # GreatCircle.m:32
    for i in arange(1,size(rot,2)).reshape(-1):
        #Avoid joining ends of path
        if rot[i] == pi:
            rot[i]=dot(rot[i],0.9999)
    # GreatCircle.m:36
        #Rotate line
        rtrd,rplg=Rotate(trda,plga,rot[i],trd,plg,'a',nargout=2)
    # GreatCircle.m:39
        #circle path
        path[i,1],path[i,2]=StCoordLine(rtrd,rplg,sttype,nargout=2)
    # GreatCircle.m:42
    
    return path
    
if __name__ == '__main__':
    pass
    